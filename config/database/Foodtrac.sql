-- MySQL Script generated by MySQL Workbench
-- Fri Jun  2 09:37:27 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='';

-- -----------------------------------------------------
-- Schema foodtrac
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema foodtrac
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `foodtrac` DEFAULT CHARACTER SET utf8 ;
USE `foodtrac` ;

-- -----------------------------------------------------
-- Table `foodtrac`.`MenuItems`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`MenuItems` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`MenuItems` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `brand_id` INT NOT NULL,
  `name` VARCHAR(30) NOT NULL,
  `price` INT NOT NULL,
  `calories` INT NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `food_type_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `Menu_Brand` (`brand_id` ASC),
  CONSTRAINT `Menu_Brand`
    FOREIGN KEY (`brand_id`)
    REFERENCES `foodtrac`.`Brands` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`Coupons`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`Coupons` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`Coupons` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `menu_item_free` TINYINT NOT NULL,
  `menu_item_discount` INT NOT NULL,
  `order_discount` INT NOT NULL,
  `menu_item_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `Coupons_MenuItems` (`menu_item_id` ASC),
  CONSTRAINT `Coupons_MenuItems`
    FOREIGN KEY (`menu_item_id`)
    REFERENCES `foodtrac`.`MenuItems` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`FoodGenres`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`FoodGenres` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`FoodGenres` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(20) NOT NULL,
  UNIQUE INDEX `FoodGenres_name_unique_index` (`name` ASC),
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`Users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`Users` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`Users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `auth0_id` VARCHAR(30) NOT NULL,
  `is_truck_owner` TINYINT NOT NULL DEFAULT 0,
  UNIQUE INDEX `Users_auth0id_unique_index` (`auth0_id` ASC),
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`Brands`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`Brands` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`Brands` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `owner_id` INT NOT NULL,
  `name` VARCHAR(30) NOT NULL,
  `description` TEXT NOT NULL,
  `food_genre_id` INT NOT NULL,
  `rewards_trigger` INT NULL DEFAULT NULL,
  `default_coupon_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `Brand_Coupons` (`default_coupon_id` ASC),
  INDEX `Brand_FoodGenre` (`food_genre_id` ASC),
  INDEX `Users_Brand` (`owner_id` ASC),
  CONSTRAINT `Brand_Coupons`
    FOREIGN KEY (`default_coupon_id`)
    REFERENCES `foodtrac`.`Coupons` (`id`),
  CONSTRAINT `Brand_FoodGenre`
    FOREIGN KEY (`food_genre_id`)
    REFERENCES `foodtrac`.`FoodGenres` (`id`),
  CONSTRAINT `Users_Brand`
    FOREIGN KEY (`owner_id`)
    REFERENCES `foodtrac`.`Users` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`BrandComments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`BrandComments` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`BrandComments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `text` TEXT NOT NULL,
  `brand_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `BrandComment_Brand` (`brand_id` ASC),
  INDEX `BrandComment_Users` (`user_id` ASC),
  CONSTRAINT `BrandComment_Brand`
    FOREIGN KEY (`brand_id`)
    REFERENCES `foodtrac`.`Brands` (`id`),
  CONSTRAINT `BrandComment_Users`
    FOREIGN KEY (`user_id`)
    REFERENCES `foodtrac`.`Users` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`Images`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`Images` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`Images` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `url` VARCHAR(30) NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `Images_Users` (`user_id` ASC),
  CONSTRAINT `Images_Users`
    FOREIGN KEY (`user_id`)
    REFERENCES `foodtrac`.`Users` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`BrandImages`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`BrandImages` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`BrandImages` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `brand_id` INT NOT NULL,
  `image_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `BrandImages_Brand` (`brand_id` ASC),
  INDEX `BrandImages_Images` (`image_id` ASC),
  CONSTRAINT `BrandImages_Brand`
    FOREIGN KEY (`brand_id`)
    REFERENCES `foodtrac`.`Brands` (`id`),
  CONSTRAINT `BrandImages_Images`
    FOREIGN KEY (`image_id`)
    REFERENCES `foodtrac`.`Images` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`BrandReviews`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`BrandReviews` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`BrandReviews` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `text` TEXT NOT NULL,
  `score` INT NOT NULL,
  `user_id` INT NOT NULL,
  `brand_id` INT NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `title` VARCHAR(20) NULL,
  PRIMARY KEY (`id`),
  INDEX `BrandComments_Brand` (`brand_id` ASC),
  INDEX `BrandComments_Users` (`user_id` ASC),
  CONSTRAINT `BrandComments_Brand`
    FOREIGN KEY (`brand_id`)
    REFERENCES `foodtrac`.`Brands` (`id`),
  CONSTRAINT `BrandComments_Users`
    FOREIGN KEY (`user_id`)
    REFERENCES `foodtrac`.`Users` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`BrandReviewsImages`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`BrandReviewsImages` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`BrandReviewsImages` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `brand_review_id` INT NOT NULL,
  `image_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `BrandReviewsImages_BrandReviews` (`brand_review_id` ASC),
  INDEX `BrandReviewsImages_Images` (`image_id` ASC),
  CONSTRAINT `BrandReviewsImages_BrandReviews`
    FOREIGN KEY (`brand_review_id`)
    REFERENCES `foodtrac`.`BrandReviews` (`id`),
  CONSTRAINT `BrandReviewsImages_Images`
    FOREIGN KEY (`image_id`)
    REFERENCES `foodtrac`.`Images` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`Locations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`Locations` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`Locations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NOT NULL,
  `address` VARCHAR(100) NOT NULL,
  `lat` DECIMAL(9,6) NOT NULL,
  `lng` DECIMAL(9,6) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`Events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`Events` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`Events` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `owner_id` INT NOT NULL,
  `start` TIMESTAMP(3) NOT NULL,
  `end` TIMESTAMP(3) NOT NULL DEFAULT 0,
  `location_id` INT NOT NULL,
  `name` VARCHAR(30) NOT NULL,
  `description` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `Events_Locations` (`location_id` ASC),
  INDEX `Events_Users` (`event_owner_id` ASC),
  CONSTRAINT `Events_Locations`
    FOREIGN KEY (`location_id`)
    REFERENCES `foodtrac`.`Locations` (`id`),
  CONSTRAINT `Events_Users`
    FOREIGN KEY (`event_owner_id`)
    REFERENCES `foodtrac`.`Users` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`EventComments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`EventComments` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`EventComments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `event_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `EventComment_Events` (`event_id` ASC),
  INDEX `EventComment_Users` (`user_id` ASC),
  CONSTRAINT `EventComment_Events`
    FOREIGN KEY (`event_id`)
    REFERENCES `foodtrac`.`Events` (`id`),
  CONSTRAINT `EventComment_Users`
    FOREIGN KEY (`user_id`)
    REFERENCES `foodtrac`.`Users` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`LocationComments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`LocationComments` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`LocationComments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `text` TEXT NOT NULL,
  `user_id` INT NOT NULL,
  `location_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `Locations_LocationComments` (`location_id` ASC),
  INDEX `Users_LocationComments` (`user_id` ASC),
  CONSTRAINT `Locations_LocationComments`
    FOREIGN KEY (`location_id`)
    REFERENCES `foodtrac`.`Locations` (`id`),
  CONSTRAINT `Users_LocationComments`
    FOREIGN KEY (`user_id`)
    REFERENCES `foodtrac`.`Users` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`Trucks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`Trucks` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`Trucks` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(20) NULL DEFAULT NULL,
  `brand_id` INT NOT NULL,
  `order` TINYINT NULL,
  PRIMARY KEY (`id`),
  INDEX `Brand_Truck` (`brand_id` ASC),
  CONSTRAINT `Brand_Truck`
    FOREIGN KEY (`brand_id`)
    REFERENCES `foodtrac`.`Brands` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`LocationTimelines`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`LocationTimelines` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`LocationTimelines` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `start` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `end` TIMESTAMP NOT NULL DEFAULT 0,
  `truck_id` INT NOT NULL,
  `location_id` INT NOT NULL,
  `checked_in` TINYINT NOT NULL DEFAULT false,
  PRIMARY KEY (`id`),
  INDEX `Locations_LocationTimelines` (`location_id` ASC),
  INDEX `Truck_LocationTimelines` (`truck_id` ASC),
  CONSTRAINT `Locations_LocationTimelines`
    FOREIGN KEY (`location_id`)
    REFERENCES `foodtrac`.`Locations` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `Truck_LocationTimelines`
    FOREIGN KEY (`truck_id`)
    REFERENCES `foodtrac`.`Trucks` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`LocationVotes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`LocationVotes` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`LocationVotes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `location_id` INT NOT NULL,
  `brand_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `LocationVotes_Brand` (`brand_id` ASC),
  INDEX `LocationVotes_Locations` (`location_id` ASC),
  INDEX `LocationVotes_Users` (`user_id` ASC),
  CONSTRAINT `LocationVotes_Brand`
    FOREIGN KEY (`brand_id`)
    REFERENCES `foodtrac`.`Brands` (`id`),
  CONSTRAINT `LocationVotes_Locations`
    FOREIGN KEY (`location_id`)
    REFERENCES `foodtrac`.`Locations` (`id`),
  CONSTRAINT `LocationVotes_Users`
    FOREIGN KEY (`user_id`)
    REFERENCES `foodtrac`.`Users` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`Notifications`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`Notifications` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`Notifications` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `text` VARCHAR(100) NOT NULL,
  `user_id` INT NOT NULL,
  `brand_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `Notifications_Brand` (`brand_id` ASC),
  INDEX `Notifications_Users` (`user_id` ASC),
  CONSTRAINT `Notifications_Brand`
    FOREIGN KEY (`brand_id`)
    REFERENCES `foodtrac`.`Brands` (`id`),
  CONSTRAINT `Notifications_Users`
    FOREIGN KEY (`user_id`)
    REFERENCES `foodtrac`.`Users` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`UserRewards`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`UserRewards` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`UserRewards` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `brand_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `count` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `UserRewards_Brand` (`brand_id` ASC),
  INDEX `UserRewards_Users` (`user_id` ASC),
  CONSTRAINT `UserRewards_Brand`
    FOREIGN KEY (`brand_id`)
    REFERENCES `foodtrac`.`Brands` (`id`),
  CONSTRAINT `UserRewards_Users`
    FOREIGN KEY (`user_id`)
    REFERENCES `foodtrac`.`Users` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`UserCoupons`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`UserCoupons` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`UserCoupons` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `redeemed` TINYINT NOT NULL,
  `coupon_id` INT NOT NULL,
  `user_reward_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `UserCoupons_Coupons` (`coupon_id` ASC),
  INDEX `UserCoupons_UserRewards` (`user_reward_id` ASC),
  CONSTRAINT `UserCoupons_Coupons`
    FOREIGN KEY (`coupon_id`)
    REFERENCES `foodtrac`.`Coupons` (`id`),
  CONSTRAINT `UserCoupons_UserRewards`
    FOREIGN KEY (`user_reward_id`)
    REFERENCES `foodtrac`.`UserRewards` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`Orders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`Orders` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`Orders` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `truck_id` INT NOT NULL,
  `date` TIMESTAMP NOT NULL,
  `user_coupon_id` INT NULL,
  `ready` TINYINT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `Orders_Truck` (`truck_id` ASC),
  INDEX `Orders_UserCoupons` (`user_coupon_id` ASC),
  INDEX `Orders_Users` (`user_id` ASC),
  CONSTRAINT `Orders_Truck`
    FOREIGN KEY (`truck_id`)
    REFERENCES `foodtrac`.`Trucks` (`id`),
  CONSTRAINT `Orders_UserCoupons`
    FOREIGN KEY (`user_coupon_id`)
    REFERENCES `foodtrac`.`UserCoupons` (`id`),
  CONSTRAINT `Orders_Users`
    FOREIGN KEY (`user_id`)
    REFERENCES `foodtrac`.`Users` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`OrderItems`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`OrderItems` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`OrderItems` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `order_id` INT NOT NULL,
  `menu_item_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `OrderItems_MenuItems` (`menu_item_id` ASC),
  INDEX `OrderItems_Orders` (`order_id` ASC),
  CONSTRAINT `OrderItems_MenuItems`
    FOREIGN KEY (`menu_item_id`)
    REFERENCES `foodtrac`.`MenuItems` (`id`),
  CONSTRAINT `OrderItems_Orders`
    FOREIGN KEY (`order_id`)
    REFERENCES `foodtrac`.`Orders` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`TruckAttendees`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`TruckAttendees` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`TruckAttendees` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `truck_id` INT NOT NULL,
  `event_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `TruckAttendees_Events` (`event_id` ASC),
  INDEX `TruckAttendees_Truck` (`truck_id` ASC),
  CONSTRAINT `TruckAttendees_Events`
    FOREIGN KEY (`event_id`)
    REFERENCES `foodtrac`.`Events` (`id`),
  CONSTRAINT `TruckAttendees_Truck`
    FOREIGN KEY (`truck_id`)
    REFERENCES `foodtrac`.`Trucks` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`Upvotes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`Upvotes` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`Upvotes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `brand_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `date` TIMESTAMP NOT NULL,
  `timeline_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `Upvote_Brand` (`brand_id` ASC),
  INDEX `Upvote_Users` (`user_id` ASC),
  INDEX `Upvote_Timeline_idx` (`timeline_id` ASC),
  CONSTRAINT `Upvote_Brand`
    FOREIGN KEY (`brand_id`)
    REFERENCES `foodtrac`.`Brands` (`id`),
  CONSTRAINT `Upvote_Users`
    FOREIGN KEY (`user_id`)
    REFERENCES `foodtrac`.`Users` (`id`),
  CONSTRAINT `Upvote_Timeline`
    FOREIGN KEY (`timeline_id`)
    REFERENCES `foodtrac`.`LocationTimelines` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `foodtrac`.`UserAttendees`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`UserAttendees` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`UserAttendees` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `event_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `UserAttendees_Events` (`event_id` ASC),
  INDEX `UserAttendees_Users` (`user_id` ASC),
  CONSTRAINT `UserAttendees_Events`
    FOREIGN KEY (`event_id`)
    REFERENCES `foodtrac`.`Events` (`id`),
  CONSTRAINT `UserAttendees_Users`
    FOREIGN KEY (`user_id`)
    REFERENCES `foodtrac`.`Users` (`id`));


-- -----------------------------------------------------
-- Table `foodtrac`.`UserFollows`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `foodtrac`.`UserFollows` ;

CREATE TABLE IF NOT EXISTS `foodtrac`.`UserFollows` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `brand_id` INT NOT NULL,
  `favorite` TINYINT NULL DEFAULT false,
  PRIMARY KEY (`id`),
  INDEX `UserFollows_Brand` (`brand_id` ASC),
  INDEX `UserFollows_Users` (`user_id` ASC),
  CONSTRAINT `UserFollows_Brand`
    FOREIGN KEY (`brand_id`)
    REFERENCES `foodtrac`.`Brands` (`id`),
  CONSTRAINT `UserFollows_Users`
    FOREIGN KEY (`user_id`)
    REFERENCES `foodtrac`.`Users` (`id`));


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
